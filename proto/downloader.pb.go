// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: downloader.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to show information about the downloadable content.
type ShowInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // The URL to fetch information from.
}

func (x *ShowInfoRequest) Reset() {
	*x = ShowInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowInfoRequest) ProtoMessage() {}

func (x *ShowInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowInfoRequest.ProtoReflect.Descriptor instead.
func (*ShowInfoRequest) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{0}
}

func (x *ShowInfoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Request to start a download.
type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // Unique identifier for the download job.
	Formats []*Format `protobuf:"bytes,2,rep,name=formats,proto3" json:"formats,omitempty"` // Selected formats to download.
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DownloadRequest) GetFormats() []*Format {
	if x != nil {
		return x.Formats
	}
	return nil
}

// Request to stop a download.
type StopDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the download job.
}

func (x *StopDownloadRequest) Reset() {
	*x = StopDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDownloadRequest) ProtoMessage() {}

func (x *StopDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDownloadRequest.ProtoReflect.Descriptor instead.
func (*StopDownloadRequest) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{2}
}

func (x *StopDownloadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response containing information about the downloadable content.
type ShowInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     // Title of the content.
	Cover   string    `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`     // Cover image URL.
	Author  string    `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`   // Author of the content.
	Formats []*Format `protobuf:"bytes,4,rep,name=formats,proto3" json:"formats,omitempty"` // Available formats for download.
}

func (x *ShowInfoResponse) Reset() {
	*x = ShowInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowInfoResponse) ProtoMessage() {}

func (x *ShowInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowInfoResponse.ProtoReflect.Descriptor instead.
func (*ShowInfoResponse) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{3}
}

func (x *ShowInfoResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShowInfoResponse) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ShowInfoResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ShowInfoResponse) GetFormats() []*Format {
	if x != nil {
		return x.Formats
	}
	return nil
}

// Progress information during the download process.
type DownloadProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                      // Unique identifier for the download job.
	BytesTransferred int64  `protobuf:"varint,2,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"` // Number of bytes transferred.
	TotalBytes       int64  `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`                   // Total number of bytes to be transferred.
	Speed            string `protobuf:"bytes,4,opt,name=speed,proto3" json:"speed,omitempty"`                                                // Current download speed.
}

func (x *DownloadProgress) Reset() {
	*x = DownloadProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadProgress) ProtoMessage() {}

func (x *DownloadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadProgress.ProtoReflect.Descriptor instead.
func (*DownloadProgress) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadProgress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DownloadProgress) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

func (x *DownloadProgress) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DownloadProgress) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

// Response for stopping a download.
type StopDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`       // Unique identifier for the download job.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"` // State of the download after stopping.
}

func (x *StopDownloadResponse) Reset() {
	*x = StopDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDownloadResponse) ProtoMessage() {}

func (x *StopDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDownloadResponse.ProtoReflect.Descriptor instead.
func (*StopDownloadResponse) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{5}
}

func (x *StopDownloadResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopDownloadResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// Represents a format that can be downloaded.
type Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // Identifier for the format.
	MimeType     string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`             // MIME type of the format.
	QualityLabel string `protobuf:"bytes,3,opt,name=quality_label,json=qualityLabel,proto3" json:"quality_label,omitempty"` // Quality label (e.g., "720p").
	Url          string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                                       // URL for downloading this format.
	FileSize     int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`            // Size of the file in bytes.
	AudioRate    string `protobuf:"bytes,6,opt,name=audio_rate,json=audioRate,proto3" json:"audio_rate,omitempty"`          // Audio sample rate.
	Bitrate      int32  `protobuf:"varint,7,opt,name=bitrate,proto3" json:"bitrate,omitempty"`                              // Bitrate of the video/audio.
	Fps          int32  `protobuf:"varint,8,opt,name=fps,proto3" json:"fps,omitempty"`                                      // Frames per second.
}

func (x *Format) Reset() {
	*x = Format{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format) ProtoMessage() {}

func (x *Format) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format.ProtoReflect.Descriptor instead.
func (*Format) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{6}
}

func (x *Format) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Format) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Format) GetQualityLabel() string {
	if x != nil {
		return x.QualityLabel
	}
	return ""
}

func (x *Format) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Format) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Format) GetAudioRate() string {
	if x != nil {
		return x.AudioRate
	}
	return ""
}

func (x *Format) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Format) GetFps() int32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

// Represents a thumbnail for the content.
type Thumbnail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`        // URL of the thumbnail.
	Width  uint32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`   // Width of the thumbnail.
	Height uint32 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // Height of the thumbnail.
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{7}
}

func (x *Thumbnail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Thumbnail) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Thumbnail) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// Represents a caption track.
type CaptionTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`           // URL of the caption track.
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"` // Language code for the caption track.
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`         // Name of the caption track.
}

func (x *CaptionTrack) Reset() {
	*x = CaptionTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptionTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptionTrack) ProtoMessage() {}

func (x *CaptionTrack) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptionTrack.ProtoReflect.Descriptor instead.
func (*CaptionTrack) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{8}
}

func (x *CaptionTrack) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CaptionTrack) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CaptionTrack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Represents metadata about the downloadable content.
type ContentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                      // Title of the content.
	Cover         string          `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`                                      // Cover image URL.
	Author        string          `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`                                    // Author of the content.
	Formats       []*Format       `protobuf:"bytes,4,rep,name=formats,proto3" json:"formats,omitempty"`                                  // Available formats for download.
	Thumbnails    []*Thumbnail    `protobuf:"bytes,5,rep,name=thumbnails,proto3" json:"thumbnails,omitempty"`                            // Thumbnails for the content.
	CaptionTracks []*CaptionTrack `protobuf:"bytes,6,rep,name=caption_tracks,json=captionTracks,proto3" json:"caption_tracks,omitempty"` // Caption tracks for the content.
}

func (x *ContentMetadata) Reset() {
	*x = ContentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMetadata) ProtoMessage() {}

func (x *ContentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMetadata.ProtoReflect.Descriptor instead.
func (*ContentMetadata) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{9}
}

func (x *ContentMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ContentMetadata) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ContentMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ContentMetadata) GetFormats() []*Format {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *ContentMetadata) GetThumbnails() []*Thumbnail {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

func (x *ContentMetadata) GetCaptionTracks() []*CaptionTrack {
	if x != nil {
		return x.CaptionTracks
	}
	return nil
}

var File_downloader_proto protoreflect.FileDescriptor

var file_downloader_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0x25,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x22, 0x86, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x62, 0x79, 0x74, 0x65, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x53, 0x74, 0x6f,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x70, 0x73, 0x22, 0x4b,
	0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x50, 0x0a, 0x0c, 0x43,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xda, 0x01,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0d, 0x63, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x32, 0xb8, 0x01, 0x0a, 0x0f, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x33, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_downloader_proto_rawDescOnce sync.Once
	file_downloader_proto_rawDescData = file_downloader_proto_rawDesc
)

func file_downloader_proto_rawDescGZIP() []byte {
	file_downloader_proto_rawDescOnce.Do(func() {
		file_downloader_proto_rawDescData = protoimpl.X.CompressGZIP(file_downloader_proto_rawDescData)
	})
	return file_downloader_proto_rawDescData
}

var file_downloader_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_downloader_proto_goTypes = []any{
	(*ShowInfoRequest)(nil),      // 0: ShowInfoRequest
	(*DownloadRequest)(nil),      // 1: DownloadRequest
	(*StopDownloadRequest)(nil),  // 2: StopDownloadRequest
	(*ShowInfoResponse)(nil),     // 3: ShowInfoResponse
	(*DownloadProgress)(nil),     // 4: DownloadProgress
	(*StopDownloadResponse)(nil), // 5: StopDownloadResponse
	(*Format)(nil),               // 6: Format
	(*Thumbnail)(nil),            // 7: Thumbnail
	(*CaptionTrack)(nil),         // 8: CaptionTrack
	(*ContentMetadata)(nil),      // 9: ContentMetadata
}
var file_downloader_proto_depIdxs = []int32{
	6, // 0: DownloadRequest.formats:type_name -> Format
	6, // 1: ShowInfoResponse.formats:type_name -> Format
	6, // 2: ContentMetadata.formats:type_name -> Format
	7, // 3: ContentMetadata.thumbnails:type_name -> Thumbnail
	8, // 4: ContentMetadata.caption_tracks:type_name -> CaptionTrack
	0, // 5: DownloadService.ShowInfo:input_type -> ShowInfoRequest
	1, // 6: DownloadService.Download:input_type -> DownloadRequest
	2, // 7: DownloadService.StopDownload:input_type -> StopDownloadRequest
	3, // 8: DownloadService.ShowInfo:output_type -> ShowInfoResponse
	4, // 9: DownloadService.Download:output_type -> DownloadProgress
	5, // 10: DownloadService.StopDownload:output_type -> StopDownloadResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_downloader_proto_init() }
func file_downloader_proto_init() {
	if File_downloader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_downloader_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ShowInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StopDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ShowInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StopDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Format); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Thumbnail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CaptionTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ContentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_downloader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_downloader_proto_goTypes,
		DependencyIndexes: file_downloader_proto_depIdxs,
		MessageInfos:      file_downloader_proto_msgTypes,
	}.Build()
	File_downloader_proto = out.File
	file_downloader_proto_rawDesc = nil
	file_downloader_proto_goTypes = nil
	file_downloader_proto_depIdxs = nil
}
